From: <Saved by Blink>
Snapshot-Content-Location: file:///C:/Users/sgc/Downloads/HTML_JS_D2L_Combined.html
Subject: HTML & JavaScript for D2L Lessons
Date: Mon, 25 Nov 2024 11:10:44 -0500
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--s39HtyqzqHN2il9qUHowZOTShc0kbUgVXpghJ7W2Wz----"


------MultipartBoundary--s39HtyqzqHN2il9qUHowZOTShc0kbUgVXpghJ7W2Wz----
Content-Type: text/html
Content-ID: <frame-ED1F0113662AEDDACFDB9ECC246810D1@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: file:///C:/Users/sgc/Downloads/HTML_JS_D2L_Combined.html

<!DOCTYPE html><html lang=3D"en"><head><meta http-equiv=3D"Content-Type" co=
ntent=3D"text/html; charset=3DUTF-8"><link rel=3D"stylesheet" type=3D"text/=
css" href=3D"cid:css-d239d455-34a3-46b7-a439-dcdbecfeb764@mhtml.blink" /><l=
ink rel=3D"stylesheet" type=3D"text/css" href=3D"cid:css-fded6145-6665-49fd=
-ae0e-9a7b95b97a4f@mhtml.blink" /><link rel=3D"stylesheet" type=3D"text/css=
" href=3D"cid:css-349a60af-c810-4185-87a1-e314b94d4161@mhtml.blink" /><link=
 rel=3D"stylesheet" type=3D"text/css" href=3D"cid:css-38d8eb1c-dd61-4638-8f=
3c-1b3067d81e6f@mhtml.blink" /><link rel=3D"stylesheet" type=3D"text/css" h=
ref=3D"cid:css-f1bdf893-45b7-4d1f-9648-78c4f3cccca7@mhtml.blink" /><link re=
l=3D"stylesheet" type=3D"text/css" href=3D"cid:css-cc0e60df-a94b-4543-96ec-=
c6185225a0a6@mhtml.blink" />
   =20
    <meta name=3D"viewport" content=3D"width=3Ddevice-width, initial-scale=
=3D1.0">
    <title>HTML &amp; JavaScript for D2L Lessons</title>
   =20
</head>
<body>
    <h1>HTML &amp; JavaScript for D2L Lessons: Comprehensive Quick Referenc=
e Guide</h1>

    <h2>1. Introduction</h2>
    <p>This guide is for educators and developers creating interactive and =
visually engaging lessons in D2L Brightspace. It focuses on:</p>
    <ul>
        <li><strong>Responsive layouts:</strong> Ensuring content adapts se=
amlessly to different screen sizes, including mobile devices.</li>
        <li><strong>Scalable design:</strong> Building reusable and modular=
 components for consistency and efficiency.</li>
        <li><strong>Interactivity:</strong> Leveraging JavaScript to enhanc=
e learner engagement through dynamic content.</li>
        <li><strong>D2L constraints:</strong> Navigating platform-specific =
limitations and best practices for compatibility.</li>
    </ul>

    <h2>2. D2L-Specific Considerations</h2>
    <h3>Constraints</h3>
    <ul>
        <li><strong>Script Stripping:</strong> D2L removes <code>&lt;script=
 type=3D"module"&gt;</code> tags. Use standard <code>&lt;script&gt;</code> =
tags without the type attribute and bundle modular JavaScript using tools l=
ike Webpack or Rollup.</li>
        <li><strong>Limited iframe Capabilities:</strong> Security policies=
 restrict iframe embedding. Use D2L's native tools where possible.</li>
        <li><strong>CSS Encapsulation:</strong> Avoid overriding D2L's core=
 styles. Use custom classes and scoped styles to prevent conflicts.</li>
    </ul>

    <h3>Recommendations</h3>
    <ul>
        <li><strong>Use Brightspace v5 Styles:</strong> Incorporate <code>g=
lobalv5.css</code> for consistency with D2L's design system.</li>
        <li><strong>Test in Preview Mode:</strong> Validate scripts and med=
ia in D2L's preview environment to ensure compatibility.</li>
        <li><strong>External Libraries:</strong> Host scripts like jQuery o=
r Plotly via trusted CDNs. Use <a href=3D"https://cdnjs.com/" target=3D"_bl=
ank">cdnjs.com</a> or <a href=3D"https://jsdelivr.com/" target=3D"_blank">j=
sdelivr.com</a> for reliability.</li>
    </ul>

    <h2>3. HTML for D2L Lessons</h2>
    <h3>Core Structure</h3>
    <p>Here=E2=80=99s a semantic, mobile-friendly template tailored for D2L=
:</p>
    <pre><code>&lt;!DOCTYPE html&gt;
&lt;html lang=3D"en"&gt;
&lt;head&gt;
  &lt;meta charset=3D"UTF-8"&gt;
  &lt;title&gt;Lesson Title&lt;/title&gt;
  &lt;meta name=3D"viewport" content=3D"width=3Ddevice-width, initial-scale=
=3D1.0"&gt;
  &lt;link rel=3D"stylesheet" href=3D"../assets/css/globalv5.css"&gt;
  &lt;link rel=3D"stylesheet" href=3D"../assets/css/custom.css"&gt;
&lt;/head&gt;
&lt;body class=3D"courseware-themes"&gt;
  &lt;header class=3D"courseware-headers-image"&gt;
    &lt;h1 class=3D"courseware-helper-text-center"&gt;Lesson Title&lt;/h1&g=
t;
  &lt;/header&gt;
  &lt;main class=3D"courseware-layouts-content-wrapper"&gt;
    &lt;!-- Lesson Content --&gt;
  &lt;/main&gt;
  &lt;footer&gt;
    &lt;p&gt;&amp;copy; 2024 Materials Engineering&lt;/p&gt;
  &lt;/footer&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>

    <h3>Semantic HTML Best Practices</h3>
    <ul>
        <li>Use <code>&lt;section&gt;</code> for grouping related content.<=
/li>
        <li>Utilize <code>&lt;article&gt;</code> for self-contained composi=
tions.</li>
        <li>Add <code>&lt;aside&gt;</code> for supplementary information.</=
li>
        <li>Employ <code>&lt;figure&gt;</code> and <code>&lt;figcaption&gt;=
</code> for images with captions.</li>
        <li>Adhere to WCAG standards for accessibility.</li>
    </ul>

    <h2>4. Basic JavaScript</h2>
    <h3>Introduction</h3>
    <p>JavaScript is the programming language of the web, used for dynamic =
and interactive content.</p>
    <h3>Basic Syntax</h3>
    <pre><code>let x =3D 10;
const pi =3D 3.14;

function greet(name) {
  return "Hello, " + name + "!";
}

for (let i =3D 0; i &lt; 5; i++) {
  console.log(i);
}</code></pre>
    <h3>Event Listeners</h3>
    <p>Add interactivity by attaching listeners to elements:</p>
    <pre><code>document.getElementById("myButton").addEventListener("click"=
, function () {
  alert("Button clicked!");
});</code></pre>







   =20
    <meta name=3D"viewport" content=3D"width=3Ddevice-width, initial-scale=
=3D1.0">
    <title>HTML &amp; JavaScript for D2L Lessons - Sections 5 to 7</title>
   =20


    <h2>5. Introduction to the DOM</h2>
    <h3>What is the DOM?</h3>
    <p>The Document Object Model (DOM) is a programming interface for web d=
ocuments. It represents the structure of an HTML document as a tree of obje=
cts. Using the DOM, JavaScript can dynamically interact with and manipulate=
 the document.</p>

    <h2>6. Basics of a DOM Element</h2>
    <h3>What is a DOM Element?</h3>
    <p>A DOM element represents an HTML element in the browser's memory. Ea=
ch HTML tag in your document becomes a corresponding DOM object.</p>
    <h3>Structure of a DOM Element</h3>
    <ul>
        <li><strong>Tag Name:</strong> The HTML tag it represents (e.g., DI=
V, P).</li>
        <li><strong>Attributes:</strong> Properties of the element (e.g., i=
d, class).</li>
        <li><strong>Content:</strong> The inner HTML or text inside the tag=
.</li>
        <li><strong>Parent/Child Relationship:</strong> Each element can ha=
ve parent and child nodes.</li>
    </ul>

    <h3>Example</h3>
    <pre><code>&lt;div id=3D"example" class=3D"container"&gt;Hello, World!&=
lt;/div&gt;</code></pre>

    <p><strong>DOM Representation:</strong></p>
    <ul>
        <li><strong>Tag:</strong> DIV</li>
        <li><strong>Attributes:</strong></li>
        <ul>
            <li><code>id=3D"example"</code></li>
            <li><code>class=3D"container"</code></li>
        </ul>
        <li><strong>Content:</strong> "Hello, World!"</li>
    </ul>

    <h3>Interacting with DOM Elements</h3>
    <p>JavaScript allows you to manipulate DOM elements:</p>
    <p><strong>Access the id attribute:</strong></p>
    <pre><code>const element =3D document.getElementById("example");
console.log(element.id); // Outputs: "example"</code></pre>
    <p><strong>Change the content:</strong></p>
    <pre><code>element.textContent =3D "New Content!";</code></pre>

    <h2>7. Advanced DOM Methods</h2>
    <h3>Traversing Nodes</h3>
    <p>Navigate between elements in the DOM:</p>
    <pre><code>const parent =3D document.querySelector(".container");
const firstChild =3D parent.firstElementChild;
const sibling =3D firstChild.nextElementSibling;</code></pre>

    <h3>Cloning Elements</h3>
    <p>Copy elements in the DOM:</p>
    <pre><code>const original =3D document.getElementById("original");
const clone =3D original.cloneNode(true); // true for deep cloning
document.body.appendChild(clone);</code></pre>

    <h3>DOM Events</h3>
    <p><strong>Event Bubbling:</strong> Events propagate upward through the=
 DOM tree by default.</p>
    <p><strong>Event Delegation:</strong> Use a parent to handle events for=
 dynamically added child elements:</p>
    <pre><code>document.querySelector(".list").addEventListener("click", fu=
nction (e) {
  if (e.target.tagName =3D=3D=3D "LI") {
    alert("List item clicked: " + e.target.textContent);
  }
});</code></pre>







   =20
    <meta name=3D"viewport" content=3D"width=3Ddevice-width, initial-scale=
=3D1.0">
    <title>HTML &amp; JavaScript for D2L Lessons - Sections 8 and 9</title>
   =20


    <h2>8. Responsive Design Principles</h2>
    <h3>What is Responsive Design?</h3>
    <p>Responsive design ensures your content adapts seamlessly to various =
screen sizes, including desktops, tablets, and mobile devices. For D2L less=
ons, this is essential to maintain accessibility and usability.</p>

    <h3>Best Practices for Responsive Design</h3>
    <ul>
        <li>Use percentage-based widths (<code>width: 100%</code>) to make =
containers adaptable.</li>
        <li>Apply media queries for specific breakpoints:</li>
        <pre><code>@media (max-width: 768px) {
    .container {
        padding: 1rem;
    }
}</code></pre>
        <li>Avoid fixed dimensions (e.g., <code>width: 500px</code>) unless=
 absolutely necessary.</li>
        <li>Use flexible grid systems and layouts to arrange content.</li>
    </ul>

    <h3>Testing for Responsiveness</h3>
    <ul>
        <li>Test on multiple devices (desktop, tablet, and mobile) and vari=
ous screen sizes.</li>
        <li>Use browser developer tools to simulate different viewports.</l=
i>
    </ul>

    <h2>9. Accessibility Considerations</h2>
    <h3>Why Accessibility Matters</h3>
    <p>Accessibility ensures all learners, including those with disabilitie=
s, can engage with your content effectively. This is both a best practice a=
nd often a legal requirement.</p>

    <h3>Key Guidelines</h3>
    <ul>
        <li>Use semantic HTML (<code>&lt;header&gt;</code>, <code>&lt;main&=
gt;</code>, <code>&lt;footer&gt;</code>) to structure your content logicall=
y.</li>
        <li>Provide alternative text (<code>alt</code> attribute) for image=
s:</li>
        <pre><code>&lt;img src=3D"diagram.png" alt=3D"A phase diagram showi=
ng material transitions"&gt;</code></pre>
        <li>Ensure interactive elements are keyboard navigable and include =
focus states.</li>
        <li>Use ARIA roles and labels for enhanced accessibility when neede=
d:</li>
        <pre><code>&lt;button aria-label=3D"Submit Form"&gt;Submit&lt;/butt=
on&gt;</code></pre>
        <li>Maintain sufficient color contrast for readability:</li>
        <ul>
            <li>Minimum contrast ratio: 4.5:1 for text.</li>
        </ul>
    </ul>

    <h3>Tools for Accessibility Testing</h3>
    <ul>
        <li>Use tools like <a href=3D"https://wave.webaim.org/">WAVE</a> or=
 browser extensions to evaluate accessibility.</li>
        <li>Test keyboard navigation to ensure all interactive elements are=
 accessible.</li>
    </ul>







   =20
    <meta name=3D"viewport" content=3D"width=3Ddevice-width, initial-scale=
=3D1.0">
    <title>HTML &amp; JavaScript for D2L Lessons - Sections 10 and 11</titl=
e>
   =20


    <h2>10. Debugging Tips</h2>
    <h3>Common Issues in D2L</h3>
    <ul>
        <li><strong>Script Stripping:</strong> D2L removes <code>&lt;script=
 type=3D"module"&gt;</code> tags, so avoid using them. Instead, bundle your=
 JavaScript using tools like Webpack or Rollup.</li>
        <li><strong>CSS Conflicts:</strong> Ensure your custom styles do no=
t override D2L's core styles by using scoped or namespace-specific CSS clas=
ses.</li>
        <li><strong>Media Loading:</strong> Large images or videos may load=
 slowly; optimize media for the web.</li>
    </ul>

    <h3>Using Browser Developer Tools</h3>
    <ul>
        <li><strong>Inspect Element:</strong> Right-click on a page and sel=
ect "Inspect" to view the HTML and CSS applied to elements.</li>
        <li><strong>Console:</strong> Check for JavaScript errors or warnin=
gs in the console. Use <code>console.log()</code> statements to debug your =
scripts.</li>
        <li><strong>Network Tab:</strong> Identify slow-loading resources o=
r missing assets.</li>
        <li><strong>Device Simulation:</strong> Use the "Responsive Design =
Mode" to simulate different screen sizes and devices.</li>
    </ul>

    <h3>Testing in D2L</h3>
    <ul>
        <li>Use D2L's Preview Mode to test how your scripts and styles rend=
er in the platform.</li>
        <li>Check across different browsers (Chrome, Firefox, Edge) to ensu=
re cross-browser compatibility.</li>
    </ul>

    <h2>11. Advanced Topics</h2>
    <h3>Using External Libraries</h3>
    <p>Leverage external JavaScript libraries like Plotly, D3.js, or jQuery=
 to add advanced functionality:</p>
    <pre><code>&lt;script src=3D"https://cdn.plot.ly/plotly-latest.min.js"&=
gt;&lt;/script&gt;</code></pre>
    <ul>
        <li>Use trusted CDNs for reliability.</li>
        <li>Ensure the libraries are lightweight to avoid slowing down page=
 load times.</li>
    </ul>

    <h3>Interactive Elements</h3>
    <p>Create dynamic features like tabs, accordions, or modals using JavaS=
cript:</p>
    <h4>Example: Tabs</h4>
    <pre><code>const tabs =3D document.querySelectorAll(".tab");
const contents =3D document.querySelectorAll(".content");

tabs.forEach((tab, index) =3D&gt; {
  tab.addEventListener("click", () =3D&gt; {
    contents.forEach(content =3D&gt; content.style.display =3D "none");
    contents[index].style.display =3D "block";
  });
});</code></pre>

    <h4>Example: Modals</h4>
    <pre><code>const modal =3D document.getElementById("myModal");
const btn =3D document.getElementById("openModal");
const close =3D document.getElementById("closeModal");

btn.addEventListener("click", () =3D&gt; modal.style.display =3D "block");
close.addEventListener("click", () =3D&gt; modal.style.display =3D "none");=
</code></pre>







   =20
    <meta name=3D"viewport" content=3D"width=3Ddevice-width, initial-scale=
=3D1.0">
    <title>HTML &amp; JavaScript for D2L Lessons - Sections 12 and 13</titl=
e>
   =20


    <h2>12. Introduction to Testing and Debugging</h2>
    <h3>Why Testing is Essential</h3>
    <p>Testing ensures that your interactive content functions as intended =
across various devices, browsers, and scenarios. D2L=E2=80=99s platform int=
roduces specific constraints that may require tailored testing.</p>

    <h3>Common Testing Scenarios</h3>
    <ul>
        <li><strong>Cross-Browser Testing:</strong> Ensure compatibility wi=
th Chrome, Firefox, Safari, and Edge.</li>
        <li><strong>Responsiveness:</strong> Test your design on mobile, ta=
blet, and desktop viewports.</li>
        <li><strong>Interactive Elements:</strong> Validate the functionali=
ty of buttons, tabs, modals, and other features.</li>
        <li><strong>Performance:</strong> Check loading times and optimize =
large media files.</li>
    </ul>

    <h3>D2L Preview Mode</h3>
    <p>D2L=E2=80=99s built-in preview mode allows you to simulate how your =
content will appear to learners. Use this to validate styles, scripts, and =
layouts.</p>

    <h2>13. Accessibility Testing</h2>
    <h3>Manual Testing Techniques</h3>
    <ul>
        <li><strong>Keyboard Navigation:</strong> Ensure all elements can b=
e accessed and interacted with via keyboard.</li>
        <li><strong>Screen Reader Compatibility:</strong> Test with screen =
readers like NVDA (Windows) or VoiceOver (Mac).</li>
        <li><strong>Focus Management:</strong> Ensure the focus order is lo=
gical and that focus states are visible.</li>
    </ul>

    <h3>Automated Testing Tools</h3>
    <ul>
        <li><strong>WAVE:</strong> Evaluate overall accessibility of your c=
ontent.</li>
        <li><strong>Lighthouse:</strong> A Chrome DevTools feature for test=
ing performance and accessibility.</li>
        <li><strong>AXE:</strong> A browser extension for in-depth accessib=
ility testing.</li>
    </ul>

    <h3>Key Areas to Test</h3>
    <ul>
        <li><strong>Alt Text:</strong> Ensure all images have meaningful <c=
ode>alt</code> attributes.</li>
        <li><strong>Form Labels:</strong> Ensure all inputs have associated=
 labels for assistive technologies.</li>
        <li><strong>Contrast:</strong> Verify that text and background colo=
rs meet WCAG 2.1 contrast requirements (4.5:1 for normal text).</li>
    </ul>







   =20
    <meta name=3D"viewport" content=3D"width=3Ddevice-width, initial-scale=
=3D1.0">
    <title>HTML &amp; JavaScript for D2L Lessons - Sections 14 and 15</titl=
e>
   =20


    <h2>14. Pre-Publishing Checklist</h2>
    <p>Before publishing your content on D2L, ensure it meets the following=
 standards:</p>

    <h3>Content Readiness</h3>
    <ul>
        <li><strong>Spelling and Grammar:</strong> Use tools like Grammarly=
 to proofread text.</li>
        <li><strong>Media Optimization:</strong> Resize and compress images=
/videos for faster loading.</li>
        <li><strong>Navigation:</strong> Verify that links and buttons lead=
 to the correct locations.</li>
    </ul>

    <h3>Technical Validation</h3>
    <ul>
        <li><strong>HTML Validation:</strong> Use the <a href=3D"https://va=
lidator.w3.org/">W3C HTML Validator</a> to check for errors in your markup.=
</li>
        <li><strong>CSS Validation:</strong> Use the <a href=3D"https://jig=
saw.w3.org/css-validator/">W3C CSS Validator</a> to ensure your styles are =
error-free.</li>
        <li><strong>JavaScript Testing:</strong> Debug scripts using browse=
r developer tools.</li>
    </ul>

    <h3>Accessibility</h3>
    <ul>
        <li>Test for screen reader compatibility, keyboard navigation, and =
proper color contrast ratios.</li>
    </ul>

    <h2>15. Additional Resources</h2>
    <p>Leverage these tools and communities to enhance your development pro=
cess:</p>

    <h3>D2L-Specific</h3>
    <ul>
        <li><strong>D2L Developer Community:</strong> <a href=3D"https://co=
mmunity.brightspace.com/">https://community.brightspace.com/</a></li>
        <li><strong>Brightspace Documentation:</strong> Detailed guides for=
 using D2L effectively.</li>
    </ul>

    <h3>Development Tools</h3>
    <ul>
        <li><strong>Code Editors:</strong> Use editors like Visual Studio C=
ode for a streamlined development experience.</li>
        <li><strong>Accessibility Testing:</strong> Tools like WAVE, Axe, a=
nd Lighthouse.</li>
    </ul>

    <h3>General References</h3>
    <ul>
        <li><strong>Mozilla Developer Network (MDN):</strong> <a href=3D"ht=
tps://developer.mozilla.org/">https://developer.mozilla.org/</a></li>
        <li><strong>WebAIM:</strong> <a href=3D"https://webaim.org/">https:=
//webaim.org/</a> for accessibility insights.</li>
    </ul>

    <p>This concludes the guide. Let me know if you'd like further refineme=
nts or additional sections!</p>



</body></html>
------MultipartBoundary--s39HtyqzqHN2il9qUHowZOTShc0kbUgVXpghJ7W2Wz----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-d239d455-34a3-46b7-a439-dcdbecfeb764@mhtml.blink

@charset "utf-8";

body { font-family: Arial, sans-serif; line-height: 1.6; margin: 20px; max-=
width: 800px; }

h1, h2, h3 { color: rgb(44, 62, 80); }

h1 { border-bottom: 2px solid rgb(52, 152, 219); padding-bottom: 10px; }

pre { background-color: rgb(244, 244, 244); padding: 10px; border: 1px soli=
d rgb(221, 221, 221); overflow-x: auto; }

code { background-color: rgb(244, 244, 244); padding: 2px 4px; border-radiu=
s: 4px; }
------MultipartBoundary--s39HtyqzqHN2il9qUHowZOTShc0kbUgVXpghJ7W2Wz----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-fded6145-6665-49fd-ae0e-9a7b95b97a4f@mhtml.blink

@charset "utf-8";

body { font-family: Arial, sans-serif; line-height: 1.6; margin: 20px; max-=
width: 800px; }

h1, h2, h3 { color: rgb(44, 62, 80); }

h1 { border-bottom: 2px solid rgb(52, 152, 219); padding-bottom: 10px; }

pre { background-color: rgb(244, 244, 244); padding: 10px; border: 1px soli=
d rgb(221, 221, 221); overflow-x: auto; }

code { background-color: rgb(244, 244, 244); padding: 2px 4px; border-radiu=
s: 4px; }
------MultipartBoundary--s39HtyqzqHN2il9qUHowZOTShc0kbUgVXpghJ7W2Wz----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-349a60af-c810-4185-87a1-e314b94d4161@mhtml.blink

@charset "utf-8";

body { font-family: Arial, sans-serif; line-height: 1.6; margin: 20px; max-=
width: 800px; }

h1, h2, h3 { color: rgb(44, 62, 80); }

h1 { border-bottom: 2px solid rgb(52, 152, 219); padding-bottom: 10px; }

pre { background-color: rgb(244, 244, 244); padding: 10px; border: 1px soli=
d rgb(221, 221, 221); overflow-x: auto; }

code { background-color: rgb(244, 244, 244); padding: 2px 4px; border-radiu=
s: 4px; }
------MultipartBoundary--s39HtyqzqHN2il9qUHowZOTShc0kbUgVXpghJ7W2Wz----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-38d8eb1c-dd61-4638-8f3c-1b3067d81e6f@mhtml.blink

@charset "utf-8";

body { font-family: Arial, sans-serif; line-height: 1.6; margin: 20px; max-=
width: 800px; }

h1, h2, h3 { color: rgb(44, 62, 80); }

h1 { border-bottom: 2px solid rgb(52, 152, 219); padding-bottom: 10px; }

pre { background-color: rgb(244, 244, 244); padding: 10px; border: 1px soli=
d rgb(221, 221, 221); overflow-x: auto; }

code { background-color: rgb(244, 244, 244); padding: 2px 4px; border-radiu=
s: 4px; }
------MultipartBoundary--s39HtyqzqHN2il9qUHowZOTShc0kbUgVXpghJ7W2Wz----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-f1bdf893-45b7-4d1f-9648-78c4f3cccca7@mhtml.blink

@charset "utf-8";

body { font-family: Arial, sans-serif; line-height: 1.6; margin: 20px; max-=
width: 800px; }

h1, h2, h3 { color: rgb(44, 62, 80); }

h1 { border-bottom: 2px solid rgb(52, 152, 219); padding-bottom: 10px; }

pre { background-color: rgb(244, 244, 244); padding: 10px; border: 1px soli=
d rgb(221, 221, 221); overflow-x: auto; }

code { background-color: rgb(244, 244, 244); padding: 2px 4px; border-radiu=
s: 4px; }
------MultipartBoundary--s39HtyqzqHN2il9qUHowZOTShc0kbUgVXpghJ7W2Wz----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-cc0e60df-a94b-4543-96ec-c6185225a0a6@mhtml.blink

@charset "utf-8";

body { font-family: Arial, sans-serif; line-height: 1.6; margin: 20px; max-=
width: 800px; }

h1, h2, h3 { color: rgb(44, 62, 80); }

h1 { border-bottom: 2px solid rgb(52, 152, 219); padding-bottom: 10px; }

pre { background-color: rgb(244, 244, 244); padding: 10px; border: 1px soli=
d rgb(221, 221, 221); overflow-x: auto; }

code { background-color: rgb(244, 244, 244); padding: 2px 4px; border-radiu=
s: 4px; }
------MultipartBoundary--s39HtyqzqHN2il9qUHowZOTShc0kbUgVXpghJ7W2Wz------
